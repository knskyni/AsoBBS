package jp.ac.asojuku.asobbs.entity;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;

import lombok.Data;

/**
 * チャットテーブル モデルクラス.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
@Data
@Entity 
@Table(name="CHAT_TABLE")
public class ChatTableEntity implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** メッセージＩＤ. */
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Integer msgId;

	/** MSG. */
	private String msg;

	/** 登録日時. */
	private Date regsterDatetime;

	/** ユーザーテーブル. */
	private Integer fromUserId;	//挿入・更新用
	@OneToOne
    @JoinColumn(name="fromUserId",insertable=false ,updatable=false)
	private UserTblEntity fromUserTbl;

	/** ユーザーテーブル. */
	private Integer toUserId;	//挿入・更新用
	@OneToOne
    @JoinColumn(name="toUserId",insertable=false ,updatable=false)
	private UserTblEntity toUserTbl;

	/**
	 * コンストラクタ.
	 */
	public ChatTableEntity() {
	}

	@PrePersist
    public void onPrePersist() {
		setRegsterDatetime(new Date());
    }

    @PreUpdate
    public void onPreUpdate() {
    	setRegsterDatetime(new Date());
    }

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((msgId == null) ? 0 : msgId.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		ChatTableEntity other = (ChatTableEntity) obj;
		if (msgId == null) {
			if (other.msgId != null) {
				return false;
			}
		} else if (!msgId.equals(other.msgId)) {
			return false;
		}
		return true;
	}

}
