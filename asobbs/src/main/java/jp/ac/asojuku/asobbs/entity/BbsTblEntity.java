package jp.ac.asojuku.asobbs.entity;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * 掲示板テーブル モデルクラス.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
@Entity 
@Table(name="BBS_TBL")
public class BbsTblEntity implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 掲示板ID. */
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Integer bbsId;

	/** カテゴリテーブル. */
	@OneToOne
    @JoinColumn(name="categoryId")
	private CategoryTblEntity categoryTbl;

	/** タイトル. */
	private String title;

	/** メッセージ. */
	private String message;

	/** 緊急フラグ. */
	private Integer emergencyFlg;

	/** 親書き込みID. */
	private Integer parentBbsId;

	/** 返信可能フラグ. */
	private Integer replyOkFlg;

	/** 作成日. */
	private Date createDate;

	/** 作成ユーザーID. */
	private Integer createUserId;

	/** 更新日付. */
	private Date updateDate;

	/** 更新ユーザーID. */
	private Integer updateUserId;

//	/** 掲示板確認テーブル 一覧. */
//	@OneToMany(mappedBy = "bbsCheckTblId")
//	private Set<BbsCheckTblEntity> bbsCheckTblSet;

	/**
	 * コンストラクタ.
	 */
	public BbsTblEntity() {
//		this.bbsCheckTblSet = new HashSet<BbsCheckTblEntity>();
	}

	/**
	 * 掲示板ID を設定します.
	 * 
	 * @param bbsId
	 *            掲示板ID
	 */
	public void setBbsId(Integer bbsId) {
		this.bbsId = bbsId;
	}

	/**
	 * 掲示板ID を取得します.
	 * 
	 * @return 掲示板ID
	 */
	public Integer getBbsId() {
		return this.bbsId;
	}

	/**
	 * カテゴリテーブル を設定します.
	 * 
	 * @param categoryTbl
	 *            カテゴリテーブル
	 */
	public void setCategoryTbl(CategoryTblEntity categoryTbl) {
		this.categoryTbl = categoryTbl;
	}

	/**
	 * カテゴリテーブル を取得します.
	 * 
	 * @return カテゴリテーブル
	 */
	public CategoryTblEntity getCategoryTbl() {
		return this.categoryTbl;
	}

	/**
	 * タイトル を設定します.
	 * 
	 * @param title
	 *            タイトル
	 */
	public void setTitle(String title) {
		this.title = title;
	}

	/**
	 * タイトル を取得します.
	 * 
	 * @return タイトル
	 */
	public String getTitle() {
		return this.title;
	}

	/**
	 * メッセージ を設定します.
	 * 
	 * @param message
	 *            メッセージ
	 */
	public void setMessage(String message) {
		this.message = message;
	}

	/**
	 * メッセージ を取得します.
	 * 
	 * @return メッセージ
	 */
	public String getMessage() {
		return this.message;
	}

	/**
	 * 緊急フラグ を設定します.
	 * 
	 * @param emergencyFlg
	 *            緊急フラグ
	 */
	public void setEmergencyFlg(Integer emergencyFlg) {
		this.emergencyFlg = emergencyFlg;
	}

	/**
	 * 緊急フラグ を取得します.
	 * 
	 * @return 緊急フラグ
	 */
	public Integer getEmergencyFlg() {
		return this.emergencyFlg;
	}

	/**
	 * 親書き込みID を設定します.
	 * 
	 * @param parentBbsId
	 *            親書き込みID
	 */
	public void setParentBbsId(Integer parentBbsId) {
		this.parentBbsId = parentBbsId;
	}

	/**
	 * 親書き込みID を取得します.
	 * 
	 * @return 親書き込みID
	 */
	public Integer getParentBbsId() {
		return this.parentBbsId;
	}

	/**
	 * 返信可能フラグ を設定します.
	 * 
	 * @param replyOkFlg
	 *            返信可能フラグ
	 */
	public void setReplyOkFlg(Integer replyOkFlg) {
		this.replyOkFlg = replyOkFlg;
	}

	/**
	 * 返信可能フラグ を取得します.
	 * 
	 * @return 返信可能フラグ
	 */
	public Integer getReplyOkFlg() {
		return this.replyOkFlg;
	}

	/**
	 * 作成日 を設定します.
	 * 
	 * @param createDate
	 *            作成日
	 */
	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	/**
	 * 作成日 を取得します.
	 * 
	 * @return 作成日
	 */
	public Date getCreateDate() {
		return this.createDate;
	}

	/**
	 * 作成ユーザーID を設定します.
	 * 
	 * @param createUserId
	 *            作成ユーザーID
	 */
	public void setCreateUserId(Integer createUserId) {
		this.createUserId = createUserId;
	}

	/**
	 * 作成ユーザーID を取得します.
	 * 
	 * @return 作成ユーザーID
	 */
	public Integer getCreateUserId() {
		return this.createUserId;
	}

	/**
	 * 更新日付 を設定します.
	 * 
	 * @param updateDate
	 *            更新日付
	 */
	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	/**
	 * 更新日付 を取得します.
	 * 
	 * @return 更新日付
	 */
	public Date getUpdateDate() {
		return this.updateDate;
	}

	/**
	 * 更新ユーザーID を設定します.
	 * 
	 * @param updateUserId
	 *            更新ユーザーID
	 */
	public void setUpdateUserId(Integer updateUserId) {
		this.updateUserId = updateUserId;
	}

	/**
	 * 更新ユーザーID を取得します.
	 * 
	 * @return 更新ユーザーID
	 */
	public Integer getUpdateUserId() {
		return this.updateUserId;
	}

//	/**
//	 * 掲示板確認テーブル 一覧を設定します.
//	 * 
//	 * @param bbsCheckTblSet
//	 *            掲示板確認テーブル 一覧
//	 */
//	public void setBbsCheckTblSet(Set<BbsCheckTblEntity> bbsCheckTblSet) {
//		this.bbsCheckTblSet = bbsCheckTblSet;
//	}
//
//	/**
//	 * 掲示板確認テーブル を追加します.
//	 * 
//	 * @param bbsCheckTbl
//	 *            掲示板確認テーブル
//	 */
//	public void addBbsCheckTbl(BbsCheckTblEntity bbsCheckTbl) {
//		this.bbsCheckTblSet.add(bbsCheckTbl);
//	}
//
//	/**
//	 * 掲示板確認テーブル 一覧を取得します.
//	 * 
//	 * @return 掲示板確認テーブル 一覧
//	 */
//	public Set<BbsCheckTblEntity> getBbsCheckTblSet() {
//		return this.bbsCheckTblSet;
//	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((bbsId == null) ? 0 : bbsId.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		BbsTblEntity other = (BbsTblEntity) obj;
		if (bbsId == null) {
			if (other.bbsId != null) {
				return false;
			}
		} else if (!bbsId.equals(other.bbsId)) {
			return false;
		}
		return true;
	}

}
